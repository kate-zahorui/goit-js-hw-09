{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAEvC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,WAAUC,IAEpBM,EAAO,C,SAAEP,E,WAAUC,MAEpBA,MA6BPL,EAAQa,iBAAiB,UAzBJ,SAAUC,GAC7BA,EAAMC,iBACN,MAAMC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWlB,EAAQmB,SAExC,IAAIC,EAAaC,OAAOL,EAAMM,OAC1BC,EAAgBF,OAAOJ,EAAKK,OAEhC,IAAK,IAAIE,EAAI,EAAGA,EAAIH,OAAOH,EAAOI,OAAQE,GAAK,EAAG,CAIhDrB,EAHeqB,EAAI,EACFJ,EAAaG,EAAgBC,GAG3CC,MAAK,EAACrB,SAAEA,EAAQC,WAAEA,MACjBqB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqBxB,QAAiBC,UAGzCwB,OAAM,EAACzB,SAAEA,EAAQC,WAAEA,MAClBqB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoB1B,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n\nfunction createPromise(position, totalDelay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, totalDelay });\n      } else {\n        reject({ position, totalDelay });\n      }\n    }, totalDelay);\n  });\n}\n\nconst onFormSubmit = function (event) {\n  event.preventDefault();\n  const { delay, step, amount } = formRef.elements;\n\n  let firstDelay = Number(delay.value);\n  let increaseDelay = Number(step.value);\n\n  for (let i = 0; i < Number(amount.value); i += 1) {\n    let position = i + 1;\n    let totalDelay = firstDelay + increaseDelay * i;\n\n    createPromise(position, totalDelay)\n      .then(({ position, totalDelay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${totalDelay}ms`\n        );\n      })\n      .catch(({ position, totalDelay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${totalDelay}ms`\n        );\n      });\n  }\n};\n\nformRef.addEventListener('submit', onFormSubmit);\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","totalDelay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay","step","amount","elements","firstDelay","Number","value","increaseDelay","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.47c4705e.js.map"}